import { BigNumber, ethers } from "ethers";
let abi = [{ "inputs": [{ "internalType": "contract ILendingPoolAddressesProvider", "name": "addressesProvider", "type": "address" }], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [], "name": "ADDRESSES_PROVIDER", "outputs": [{ "internalType": "contract ILendingPoolAddressesProvider", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getAllATokens", "outputs": [{ "components": [{ "internalType": "string", "name": "symbol", "type": "string" }, { "internalType": "address", "name": "tokenAddress", "type": "address" }], "internalType": "struct AaveProtocolDataProvider.TokenData[]", "name": "", "type": "tuple[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getAllReservesTokens", "outputs": [{ "components": [{ "internalType": "string", "name": "symbol", "type": "string" }, { "internalType": "address", "name": "tokenAddress", "type": "address" }], "internalType": "struct AaveProtocolDataProvider.TokenData[]", "name": "", "type": "tuple[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "asset", "type": "address" }], "name": "getReserveConfigurationData", "outputs": [{ "internalType": "uint256", "name": "decimals", "type": "uint256" }, { "internalType": "uint256", "name": "ltv", "type": "uint256" }, { "internalType": "uint256", "name": "liquidationThreshold", "type": "uint256" }, { "internalType": "uint256", "name": "liquidationBonus", "type": "uint256" }, { "internalType": "uint256", "name": "reserveFactor", "type": "uint256" }, { "internalType": "bool", "name": "usageAsCollateralEnabled", "type": "bool" }, { "internalType": "bool", "name": "borrowingEnabled", "type": "bool" }, { "internalType": "bool", "name": "stableBorrowRateEnabled", "type": "bool" }, { "internalType": "bool", "name": "isActive", "type": "bool" }, { "internalType": "bool", "name": "isFrozen", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "asset", "type": "address" }], "name": "getReserveData", "outputs": [{ "internalType": "uint256", "name": "availableLiquidity", "type": "uint256" }, { "internalType": "uint256", "name": "totalStableDebt", "type": "uint256" }, { "internalType": "uint256", "name": "totalVariableDebt", "type": "uint256" }, { "internalType": "uint256", "name": "liquidityRate", "type": "uint256" }, { "internalType": "uint256", "name": "variableBorrowRate", "type": "uint256" }, { "internalType": "uint256", "name": "stableBorrowRate", "type": "uint256" }, { "internalType": "uint256", "name": "averageStableBorrowRate", "type": "uint256" }, { "internalType": "uint256", "name": "liquidityIndex", "type": "uint256" }, { "internalType": "uint256", "name": "variableBorrowIndex", "type": "uint256" }, { "internalType": "uint40", "name": "lastUpdateTimestamp", "type": "uint40" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "asset", "type": "address" }], "name": "getReserveTokensAddresses", "outputs": [{ "internalType": "address", "name": "aTokenAddress", "type": "address" }, { "internalType": "address", "name": "stableDebtTokenAddress", "type": "address" }, { "internalType": "address", "name": "variableDebtTokenAddress", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "asset", "type": "address" }, { "internalType": "address", "name": "user", "type": "address" }], "name": "getUserReserveData", "outputs": [{ "internalType": "uint256", "name": "currentATokenBalance", "type": "uint256" }, { "internalType": "uint256", "name": "currentStableDebt", "type": "uint256" }, { "internalType": "uint256", "name": "currentVariableDebt", "type": "uint256" }, { "internalType": "uint256", "name": "principalStableDebt", "type": "uint256" }, { "internalType": "uint256", "name": "scaledVariableDebt", "type": "uint256" }, { "internalType": "uint256", "name": "stableBorrowRate", "type": "uint256" }, { "internalType": "uint256", "name": "liquidityRate", "type": "uint256" }, { "internalType": "uint40", "name": "stableRateLastUpdated", "type": "uint40" }, { "internalType": "bool", "name": "usageAsCollateralEnabled", "type": "bool" }], "stateMutability": "view", "type": "function" }]
const cAdd = "0x7551b5D2763519d4e37e8B81929D336De671d46d";
const addressUser = "0x98f9694D9c7b09b8e08B5C827d0D6177eEdD61e9";
const add = "0xBf60806A6B1a2E2c49DF581D5bE2De90375572e8";
const provider = new ethers.providers.JsonRpcProvider("https://polygon-rpc.com");
//User Data 0x7551b5D2763519d4e37e8B81929D336De671d46d
//Lendind data
//https://polygonscan.com/address/0x7551b5D2763519d4e37e8B81929D336De671d46d#readContract
async function getAaveBal() {
    let contr = new ethers.Contract(cAdd, abi, provider);
    const bal = await contr.getUserReserveData("0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619", addressUser);
    console.log(ethers.utils.formatEther(bal["currentATokenBalance"].toString()))
}
getAaveBal();

async function getAssetRate() {
    let contr = new ethers.Contract(cAdd, abi, provider);
    const bal = await contr.getReserveData("0x172370d5Cd63279eFa6d502DAB29171933a610AF");
    console.log(bal['variableBorrowRate'].toString() / 1e25)
}
getAssetRate()